---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry
    spec:
      {{- with .Values.registry.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: registry
          image: {{ .Values.images.tags.registry }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: registry-var
              mountPath: /var/lib/registry
              readOnly: false
          livenessProbe:
            httpGet:
              path: /v2
              port: 5000
          readinessProbe:
            httpGet:
              path: /v2
              port: 5000
      volumes:
        - name: registry-var
          persistentVolumeClaim:
            claimName: {{ .Release.Namespace }}-registry-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: registry
spec:
  # type: LoadBalancer
  selector:
    app.kubernetes.io/name: registry
  ports:
    - name: http
      port: 80
      targetPort: 5000
      protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: registry
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: registry
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.ingress_class }}
    nginx.ingress.kubernetes.io/use-regex: "true"
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.org/client-max-body-size: "0"
spec:
  rules:
  - http:
      paths:
      - path: /v2
        backend:
          serviceName: registry
          servicePort: 80
    host: {{ .Values.ingress.base_url }}

